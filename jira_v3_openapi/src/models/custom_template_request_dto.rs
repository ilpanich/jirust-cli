/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-076cd4f44b0487c600c6a2c6fd87f6323c1ed5c5
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CustomTemplateRequestDto : The specific request object for creating a project with template.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomTemplateRequestDto {
    #[serde(rename = "boards", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub boards: Option<Option<Box<models::BoardsPayload>>>,
    #[serde(rename = "field", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub field: Option<Option<Box<models::FieldCapabilityPayload>>>,
    #[serde(rename = "issueType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub issue_type: Option<Option<Box<models::IssueTypeProjectCreatePayload>>>,
    #[serde(rename = "notification", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notification: Option<Option<Box<models::NotificationSchemePayload>>>,
    #[serde(rename = "permissionScheme", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub permission_scheme: Option<Option<Box<models::PermissionPayloadDto>>>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<Box<models::ProjectPayload>>,
    #[serde(rename = "role", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub role: Option<Option<Box<models::RolesCapabilityPayload>>>,
    #[serde(rename = "scope", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub scope: Option<Option<Box<models::ScopePayload>>>,
    #[serde(rename = "security", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub security: Option<Option<Box<models::SecuritySchemePayload>>>,
    #[serde(rename = "workflow", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub workflow: Option<Option<Box<models::WorkflowCapabilityPayload>>>,
}

impl CustomTemplateRequestDto {
    /// The specific request object for creating a project with template.
    pub fn new() -> CustomTemplateRequestDto {
        CustomTemplateRequestDto {
            boards: None,
            field: None,
            issue_type: None,
            notification: None,
            permission_scheme: None,
            project: None,
            role: None,
            scope: None,
            security: None,
            workflow: None,
        }
    }
}

