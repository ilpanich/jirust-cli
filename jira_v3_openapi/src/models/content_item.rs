/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-4f9780d932de14e7c3dec0c9382f8855050fda22
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContentItem : Represents the content to redact
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentItem {
    /// The ID of the content entity. For redacting a issue field, this will be field id. e.g. summary, customfield\\_10000.
    #[serde(rename = "entityId")]
    pub entity_id: String,
    /// The type of the entity to redact
    #[serde(rename = "entityType")]
    pub entity_type: EntityType,
    /// This would be the issue ID
    #[serde(rename = "id")]
    pub id: String,
}

impl ContentItem {
    /// Represents the content to redact
    pub fn new(entity_id: String, entity_type: EntityType, id: String) -> ContentItem {
        ContentItem {
            entity_id,
            entity_type,
            id,
        }
    }
}
/// The type of the entity to redact
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EntityType {
    #[serde(rename = "issuefieldvalue")]
    Issuefieldvalue,
}

impl Default for EntityType {
    fn default() -> EntityType {
        Self::Issuefieldvalue
    }
}

