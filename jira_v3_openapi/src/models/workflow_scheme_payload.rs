/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-076cd4f44b0487c600c6a2c6fd87f6323c1ed5c5
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WorkflowSchemePayload : The payload for creating a workflow scheme. See https://www.atlassian.com/software/jira/guides/workflows/overview\\#what-is-a-jira-workflow-scheme
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowSchemePayload {
    #[serde(rename = "defaultWorkflow", skip_serializing_if = "Option::is_none")]
    pub default_workflow: Option<Box<models::ProjectCreateResourceIdentifier>>,
    /// The description of the workflow scheme
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Association between issuetypes and workflows
    #[serde(rename = "explicitMappings", skip_serializing_if = "Option::is_none")]
    pub explicit_mappings: Option<std::collections::HashMap<String, models::ProjectCreateResourceIdentifier>>,
    /// The name of the workflow scheme
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "pcri", skip_serializing_if = "Option::is_none")]
    pub pcri: Option<Box<models::ProjectCreateResourceIdentifier>>,
}

impl WorkflowSchemePayload {
    /// The payload for creating a workflow scheme. See https://www.atlassian.com/software/jira/guides/workflows/overview\\#what-is-a-jira-workflow-scheme
    pub fn new() -> WorkflowSchemePayload {
        WorkflowSchemePayload {
            default_workflow: None,
            description: None,
            explicit_mappings: None,
            name: None,
            pcri: None,
        }
    }
}

