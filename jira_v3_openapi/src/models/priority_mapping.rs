/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-04504326a3bb85891591d523cc28ed61aefaa46b
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PriorityMapping : Mapping of issue priorities for changes in priority schemes.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PriorityMapping {
    /// The mapping of priorities for issues being migrated **into** this priority scheme. Key is the old priority ID, value is the new priority ID (must exist in this priority scheme).
    #[serde(rename = "in", skip_serializing_if = "Option::is_none")]
    pub r#in: Option<std::collections::HashMap<String, i64>>,
    /// The mapping of priorities for issues being migrated **out of** this priority scheme. Key is the old priority ID (must exist in this priority scheme), value is the new priority ID (must exist in the default priority scheme). Required for updating an existing priority scheme. Not used when creating a new priority scheme.
    #[serde(rename = "out", skip_serializing_if = "Option::is_none")]
    pub out: Option<std::collections::HashMap<String, i64>>,
}

impl PriorityMapping {
    /// Mapping of issue priorities for changes in priority schemes.
    pub fn new() -> PriorityMapping {
        PriorityMapping {
            r#in: None,
            out: None,
        }
    }
}

