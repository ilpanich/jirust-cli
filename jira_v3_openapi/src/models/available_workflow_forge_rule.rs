/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-04504326a3bb85891591d523cc28ed61aefaa46b
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AvailableWorkflowForgeRule : The Forge provided ecosystem rules available.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AvailableWorkflowForgeRule {
    /// The rule description.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The unique ARI of the forge rule type.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The rule name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The rule key.
    #[serde(rename = "ruleKey", skip_serializing_if = "Option::is_none")]
    pub rule_key: Option<String>,
    /// The rule type.
    #[serde(rename = "ruleType", skip_serializing_if = "Option::is_none")]
    pub rule_type: Option<RuleType>,
}

impl AvailableWorkflowForgeRule {
    /// The Forge provided ecosystem rules available.
    pub fn new() -> AvailableWorkflowForgeRule {
        AvailableWorkflowForgeRule {
            description: None,
            id: None,
            name: None,
            rule_key: None,
            rule_type: None,
        }
    }
}
/// The rule type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RuleType {
    #[serde(rename = "Condition")]
    Condition,
    #[serde(rename = "Validator")]
    Validator,
    #[serde(rename = "Function")]
    Function,
    #[serde(rename = "Screen")]
    Screen,
}

impl Default for RuleType {
    fn default() -> RuleType {
        Self::Condition
    }
}

