/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-076cd4f44b0487c600c6a2c6fd87f6323c1ed5c5
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RedactionJobStatusResponse {
    #[serde(rename = "bulkRedactionResponse", skip_serializing_if = "Option::is_none")]
    pub bulk_redaction_response: Option<Box<models::BulkRedactionResponse>>,
    #[serde(rename = "jobStatus", skip_serializing_if = "Option::is_none")]
    pub job_status: Option<JobStatus>,
}

impl RedactionJobStatusResponse {
    pub fn new() -> RedactionJobStatusResponse {
        RedactionJobStatusResponse {
            bulk_redaction_response: None,
            job_status: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobStatus {
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "IN_PROGRESS")]
    InProgress,
    #[serde(rename = "COMPLETED")]
    Completed,
}

impl Default for JobStatus {
    fn default() -> JobStatus {
        Self::Pending
    }
}

