/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-076cd4f44b0487c600c6a2c6fd87f6323c1ed5c5
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WorkflowCapabilityPayload : The payload for creating a workflows. See https://www.atlassian.com/software/jira/guides/workflows/overview\\#what-is-a-jira-workflow
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowCapabilityPayload {
    /// The statuses for the workflow
    #[serde(rename = "statuses", skip_serializing_if = "Option::is_none")]
    pub statuses: Option<Vec<models::StatusPayload>>,
    #[serde(rename = "workflowScheme", skip_serializing_if = "Option::is_none")]
    pub workflow_scheme: Option<Box<models::WorkflowSchemePayload>>,
    /// The transitions for the workflow
    #[serde(rename = "workflows", skip_serializing_if = "Option::is_none")]
    pub workflows: Option<Vec<models::WorkflowPayload>>,
}

impl WorkflowCapabilityPayload {
    /// The payload for creating a workflows. See https://www.atlassian.com/software/jira/guides/workflows/overview\\#what-is-a-jira-workflow
    pub fn new() -> WorkflowCapabilityPayload {
        WorkflowCapabilityPayload {
            statuses: None,
            workflow_scheme: None,
            workflows: None,
        }
    }
}

