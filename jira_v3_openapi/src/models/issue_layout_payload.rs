/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-4f9780d932de14e7c3dec0c9382f8855050fda22
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IssueLayoutPayload : Defines the payload to configure the issue layouts for a project.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IssueLayoutPayload {
    #[serde(rename = "containerId", skip_serializing_if = "Option::is_none")]
    pub container_id: Option<Box<models::ProjectCreateResourceIdentifier>>,
    /// The issue layout type
    #[serde(rename = "issueLayoutType", skip_serializing_if = "Option::is_none")]
    pub issue_layout_type: Option<IssueLayoutType>,
    /// The configuration of items in the issue layout
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::IssueLayouItemtPayload>>,
    #[serde(rename = "pcri", skip_serializing_if = "Option::is_none")]
    pub pcri: Option<Box<models::ProjectCreateResourceIdentifier>>,
}

impl IssueLayoutPayload {
    /// Defines the payload to configure the issue layouts for a project.
    pub fn new() -> IssueLayoutPayload {
        IssueLayoutPayload {
            container_id: None,
            issue_layout_type: None,
            items: None,
            pcri: None,
        }
    }
}
/// The issue layout type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IssueLayoutType {
    #[serde(rename = "ISSUE_VIEW")]
    IssueView,
    #[serde(rename = "ISSUE_CREATE")]
    IssueCreate,
    #[serde(rename = "REQUEST_FORM")]
    RequestForm,
}

impl Default for IssueLayoutType {
    fn default() -> IssueLayoutType {
        Self::IssueView
    }
}

