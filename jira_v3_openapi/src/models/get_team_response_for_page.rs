/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-076cd4f44b0487c600c6a2c6fd87f6323c1ed5c5
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTeamResponseForPage {
    /// The team ID.
    #[serde(rename = "id")]
    pub id: String,
    /// The team name. This is returned if the type is \"PlanOnly\".
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The team type. This is \"PlanOnly\" or \"Atlassian\".
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl GetTeamResponseForPage {
    pub fn new(id: String, r#type: Type) -> GetTeamResponseForPage {
        GetTeamResponseForPage {
            id,
            name: None,
            r#type,
        }
    }
}
/// The team type. This is \"PlanOnly\" or \"Atlassian\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "PlanOnly")]
    PlanOnly,
    #[serde(rename = "Atlassian")]
    Atlassian,
}

impl Default for Type {
    fn default() -> Type {
        Self::PlanOnly
    }
}

