/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-7dd452bf833f9d1d005d3d3d429c42e9aacb344e
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContextForProjectAndIssueType : The project and issue type mapping with a matching custom field context.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContextForProjectAndIssueType {
    /// The ID of the custom field context.
    #[serde(rename = "contextId")]
    pub context_id: String,
    /// The ID of the issue type.
    #[serde(rename = "issueTypeId")]
    pub issue_type_id: String,
    /// The ID of the project.
    #[serde(rename = "projectId")]
    pub project_id: String,
}

impl ContextForProjectAndIssueType {
    /// The project and issue type mapping with a matching custom field context.
    pub fn new(context_id: String, issue_type_id: String, project_id: String) -> ContextForProjectAndIssueType {
        ContextForProjectAndIssueType {
            context_id,
            issue_type_id,
            project_id,
        }
    }
}

