/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-1461af1efd5cc75bf21cb8256a8b42f9bd4278be
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetDateFieldResponse {
    /// A date custom field ID. This is returned if the type is \"DateCustomField\".
    #[serde(rename = "dateCustomFieldId", skip_serializing_if = "Option::is_none")]
    pub date_custom_field_id: Option<i64>,
    /// The date field type. This is \"DueDate\", \"TargetStartDate\", \"TargetEndDate\" or \"DateCustomField\".
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl GetDateFieldResponse {
    pub fn new(r#type: Type) -> GetDateFieldResponse {
        GetDateFieldResponse {
            date_custom_field_id: None,
            r#type,
        }
    }
}
/// The date field type. This is \"DueDate\", \"TargetStartDate\", \"TargetEndDate\" or \"DateCustomField\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "DueDate")]
    DueDate,
    #[serde(rename = "TargetStartDate")]
    TargetStartDate,
    #[serde(rename = "TargetEndDate")]
    TargetEndDate,
    #[serde(rename = "DateCustomField")]
    DateCustomField,
}

impl Default for Type {
    fn default() -> Type {
        Self::DueDate
    }
}

