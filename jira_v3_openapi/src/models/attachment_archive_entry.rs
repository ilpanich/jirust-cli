/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-04504326a3bb85891591d523cc28ed61aefaa46b
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AttachmentArchiveEntry {
    #[serde(rename = "abbreviatedName", skip_serializing_if = "Option::is_none")]
    pub abbreviated_name: Option<String>,
    #[serde(rename = "entryIndex", skip_serializing_if = "Option::is_none")]
    pub entry_index: Option<i64>,
    #[serde(rename = "mediaType", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
}

impl AttachmentArchiveEntry {
    pub fn new() -> AttachmentArchiveEntry {
        AttachmentArchiveEntry {
            abbreviated_name: None,
            entry_index: None,
            media_type: None,
            name: None,
            size: None,
        }
    }
}

