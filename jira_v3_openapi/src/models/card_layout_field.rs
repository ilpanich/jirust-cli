/*
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-4f9780d932de14e7c3dec0c9382f8855050fda22
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CardLayoutField : Card layout settings of the board
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CardLayoutField {
    #[serde(rename = "fieldId", skip_serializing_if = "Option::is_none")]
    pub field_id: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Mode>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
}

impl CardLayoutField {
    /// Card layout settings of the board
    pub fn new() -> CardLayoutField {
        CardLayoutField {
            field_id: None,
            id: None,
            mode: None,
            position: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "PLAN")]
    Plan,
    #[serde(rename = "WORK")]
    Work,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::Plan
    }
}

